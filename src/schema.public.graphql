# 贡献(DEPRECATED)
"""
贡献(DEPRECATED)
"""
type Contribute {
  
  # id
  """
  id
  """
  id: BigInt!
  
  # 类型
   # 1. 文章修改 2. 期刊修改 3. 会议修改 4. 话题修改  5. 修改话题相关文章 6. 修改话题相关作者
   # 7. 修改话题相关会议 8. 修改话题相关期刊 9. 修改机构申请 10. 合并文章 11. 合并作者 12. 合并期刊
   # 13. 合并话题 14. 合并机构 15. 新增文章 16. 新增机构 17. 新增作者 18. 新增会议 19. 新增机构 20. 新增话题
  """
  类型
  1. 文章修改 2. 期刊修改 3. 会议修改 4. 话题修改  5. 修改话题相关文章 6. 修改话题相关作者
  7. 修改话题相关会议 8. 修改话题相关期刊 9. 修改机构申请 10. 合并文章 11. 合并作者 12. 合并期刊
  13. 合并话题 14. 合并机构 15. 新增文章 16. 新增机构 17. 新增作者 18. 新增会议 19. 新增机构 20. 新增话题
  """
  apply_type: NonNegativeInt!
  
  # 基本数据
  """
  基本数据
  """
  base_info: JSONObject
  
  # 审核时间
  """
  审核时间
  """
  check_at: DateTime
  
  # 申请人
  """
  申请人
  """
  applyer: Author
}


# 文章
"""
文章
"""
type Article implements TypedObject {
  id: BigInt!
  isA: String!
  
  # 文章标题
  """
  文章标题
  """
  title: String!
  
  # 索引类型, 包括EI、SCI
  """
  索引类型, 包括EI、SCI
  """
  indexType: ArticleIndex
  
  # 摘要
  """
  摘要
  """
  abstract: String!
  
  # 关键词
  """
  关键词
  """
  keywords: [String]!
  
  # 文章doi（唯一数字标识）
  """
  文章doi（唯一数字标识）
  """
  doi: String
  
  # 文章链接
  """
  文章链接
  """
  links: [URL]
  
  # 发表日期
  """
  发表日期
  """
  publishDate: DateTime
  
  # 出版期刊
  """
  出版期刊
  """
  journal: Journal
  
  # 出版会议
  """
  出版会议
  """
  conference: Conference
  
  # 文章作者
  """
  文章作者
  """
  authors: [Author!]
  
  # 关联课题
  """
  关联课题
  """
  researches(pageParam: PageParam): ResearchConnection
  
  # 关联教程
  """
  关联教程
  """
  courses(pageParam: PageParam): CourseConnection
  
  # 关联问答
  """
  关联问答
  """
  questionAnswers(pageParam: PageParam): QuestionAnswerConnection
  
  # 行为统计
  """
  行为统计
  """
  statistics: ArticleStatistics
  
  # 文章状态
  """
  文章状态
  """
  status: MetaDataStatus!
  
  # 文章动态，用于在文章详情页中展示该元数据最近的变化
  """
  文章动态，用于在文章详情页中展示该元数据最近的变化
  """
  dynamics(pageParam: PageParam!): DynamicFeed!
  
  # 社区内容维护的主要贡献者，至多返回 10 位用户
  """
  社区内容维护的主要贡献者，至多返回 10 位用户
  """
  majorContributors: [Author!]!
  
  # 当前用户是否关注文章
  """
  当前用户是否关注文章
  """
  isSubscribed: Boolean!
  
  # 当前用户是否读过文章
  """
  当前用户是否读过文章
  """
  isRead: Boolean!
  
  # 基本信息 - 主页创新
  """
  基本信息 - 主页创新
  """
  innovation: String
  
  # 基本信息 - 方法思路
  """
  基本信息 - 方法思路
  """
  method: String
  
  # 基本信息 - 论文结论
  """
  基本信息 - 论文结论
  """
  conclusion: String
  
  # 基本信息 - 存在不足
  """
  基本信息 - 存在不足
  """
  drawback: String
}

type ArticleStatistics {
  
  # 关注人数
  """
  关注人数
  """
  nSubscribers: NonNegativeInt!
  
  # 读过该文章的人数
  """
  读过该文章的人数
  """
  nReaders: NonNegativeInt!
  
  # 关联的教程数量
  """
  关联的教程数量
  """
  nCourses: NonNegativeInt!
  
  # 关联的问答数量
  """
  关联的问答数量
  """
  nQuestionAnswers: NonNegativeInt!
}


# 新建文章 输入参数
"""
新建文章 输入参数
"""
input NewArticleInput {
  
  # 文章标题
  """
  文章标题
  """
  title: String!
  
  # 索引类型, 包括EI、SCI
  """
  索引类型, 包括EI、SCI
  """
  indexType: ArticleIndex
  
  # 摘要
  """
  摘要
  """
  abstract: String!
  
  # 关键词
  """
  关键词
  """
  keywords: [String]!
  
  # 文章doi（唯一数字标识）
  """
  文章doi（唯一数字标识）
  """
  doi: String
  
  # 文章链接
  """
  文章链接
  """
  links: [URL]
  
  # 发表日期
  """
  发表日期
  """
  publishDate: DateTime
  
  # 出版期刊
  """
  出版期刊
  """
  journalId: BigInt
  
  # 出版会议
  """
  出版会议
  """
  conferenceId: BigInt
  
  # 文章作者
  """
  文章作者
  """
  authorIds: [BigInt]
}


# 更新文章 输入参数
"""
更新文章 输入参数
"""
input UpdateArticleInput {
  id: BigInt!
  
  # 文章标题
  """
  文章标题
  """
  title: String
  
  # 索引类型, 包括EI、SCI
  """
  索引类型, 包括EI、SCI
  """
  indexType: ArticleIndex
  
  # 摘要
  """
  摘要
  """
  abstract: String
  
  # 关键词
  """
  关键词
  """
  keywords: [String]
  
  # 文章doi（唯一数字标识）
  """
  文章doi（唯一数字标识）
  """
  doi: String
  
  # 文章链接
  """
  文章链接
  """
  links: [URL]
  
  # 发表日期
  """
  发表日期
  """
  publishDate: DateTime
  
  # 出版期刊
  """
  出版期刊
  """
  journalId: BigInt
  
  # 出版会议
  """
  出版会议
  """
  conferenceId: BigInt
  
  # 文章作者
  """
  文章作者
  """
  authorIds: [BigInt]
}


# 文章过滤参数
"""
文章过滤参数
"""
input ArticleFilterParam {
  
  # 索引类型, 包括EI、SCI
  """
  索引类型, 包括EI、SCI
  """
  indexType: ArticleIndex
  
  # 关键词
  """
  关键词
  """
  keywords: [String!]
  
  # 文章作者
  """
  文章作者
  """
  authorIds: [BigInt!]
}


# 用来排序的字段
"""
用来排序的字段
"""
enum ArticleSortableField {
  
  # 发表日期
  """
  发表日期
  """
  PUBLISHDATE
}


# 文章排序控制参数
"""
文章排序控制参数
"""
input ArticleSortParam {
  field: ArticleSortableField!
  direction: SortDirection!
}


# 文章集合查询参数
"""
文章集合查询参数
"""
input ArticleConnectionInput {
  pageParam: PageParam
  filterParam: ArticleFilterParam
  sortParam: ArticleSortParam
}

type Query {
  
  # 查询文章
  """
  查询文章
  """
  article(id: BigInt!): Article
  
  # 查询文章列表
  """
  查询文章列表
  """
  articles(input: ArticleConnectionInput): ArticleConnection
  
  # 首页推荐 - 文章
  """
  首页推荐 - 文章
  """
  recommendedArticles(pageParam: PageParam!): ArticleConnection!
  
  # 查询作者信息
  """
  查询作者信息
  """
  author(authorId: BigInt!): Author
  
  # 查看论文集的内容
  """
  查看论文集的内容
  """
  collection(collectionId: BigInt!): Collection
  
  # 查询评论详情 (DEPRECATED)
  """
  查询评论详情 (DEPRECATED)
  """
  comment(commentID: BigInt): Comment
  
  # 查询评论列表（根据评论对象） (DEPRECATED)
  """
  查询评论列表（根据评论对象） (DEPRECATED)
  """
  comments(
  # 作者ID
  """
  作者ID
  """
  authorID: BigInt, 
  # 对象类型
  """
  对象类型
  """
  targetType: commentTargets!, 
  # 对象id
  """
  对象id
  """
  targetID: BigInt!, 
  # 查询开始id
  """
  查询开始id
  """
  startID: BigInt, 
  # 查询返回个数
  """
  查询返回个数
  """
  size: NonNegativeInt): [Comment!]!
  
  # 查询评论的子评论 (DEPRECATED)
  """
  查询评论的子评论 (DEPRECATED)
  """
  subComments(
  # 父级评论ID
  """
  父级评论ID
  """
  commentID: BigInt, 
  # 查询开始id
  """
  查询开始id
  """
  startID: BigInt, 
  # 查询返回个数
  """
  查询返回个数
  """
  size: NonNegativeInt): [Comment!]!
  
  # 查询会议
  """
  查询会议
  """
  conference(id: BigInt!): Conference
  
  # 查询会议列表
  """
  查询会议列表
  """
  conferences(input: ConferenceConnectionInput): ConferenceConnection!
  
  # 首页推荐 - 会议
  """
  首页推荐 - 会议
  """
  recommendedConferences(pageParam: PageParam!): ConferenceConnection!
  
  # 获取教程
  """
  获取教程
  """
  course(id: BigInt!): Course
  
  # 获取教程列表
  """
  获取教程列表
  """
  courses(input: CourseCollectionInput!): CourseFeed!
  
  # 首页推荐 - 教程
  """
  首页推荐 - 教程
  """
  recommendedCourses(pageParam: PageParam!): CourseFeed!
  
  # 按照时间顺序聚合当前用户所订阅/关注的所有数据对象的最近动态
  """
  按照时间顺序聚合当前用户所订阅/关注的所有数据对象的最近动态
  """
  dynamicsOfInterest(input: DynamicsOfInterestInput!): DynamicFeed!
  
  # 查询机构
  """
  查询机构
  """
  institution(id: BigInt!): Institution
  
  # 查询机构列表
  """
  查询机构列表
  """
  institutions(input: InstitutionConnectionInput!): InstitutionConnection!
  
  # 查询期刊
  """
  查询期刊
  """
  journal(journalId: BigInt!): Journal
  
  # 查询期刊列表
  """
  查询期刊列表
  """
  journals(input: JournalConnectionInput): JournalConnection!
  
  # 首页推荐 - 期刊
  """
  首页推荐 - 期刊
  """
  recommendedJournals(pageParam: PageParam!): JournalConnection!
  
  # 查找思维导图草稿
  """
  查找思维导图草稿
  """
  mindMapDraft(mindMapId: BigInt!): MindMap
  
  # 查询笔记 (DEPRECATED)
  """
  查询笔记 (DEPRECATED)
  """
  note(noteID: BigInt!, noteType: NoteType!): Note
  
  # 查询笔记(问题)列表 (DEPRECATED)
  """
  查询笔记(问题)列表 (DEPRECATED)
  """
  notes(startID: BigInt, 
  # 返回个数
  """
  返回个数
  """
  size: NonNegativeInt = 15, 
  # 笔记类型(笔记或问题)
  """
  笔记类型(笔记或问题)
  """
  noteType: NoteType!, 
  # 文章ID
  """
  文章ID
  """
  articleID: BigInt, 
  # 作者ID
  """
  作者ID
  """
  authorID: BigInt): [Note]
  
  # 生成交易码
  """
  生成交易码
  """
  generateTradeNumber: String!
  
  # 查看问题列表
  """
  查看问题列表
  """
  questions(input: QACollectionInput!): QuestionFeed
  
  # 查看问题详情（该接口的功能能够由 questions 接口代替，比较点击列表中某一项展示详情，所有信息在 QuestionFeed 中都可以拿到）
  """
  查看问题详情（该接口的功能能够由 questions 接口代替，比较点击列表中某一项展示详情，所有信息在 QuestionFeed 中都可以拿到）
  """
  question(questionId: BigInt!): Question
  
  # 查看某个问题的完整回答列表
  """
  查看某个问题的完整回答列表
  """
  questionAnswers(questionId: BigInt!, input: QACollectionInput!): QuestionAnswerFeed
  
  # 查看完整回答详情，参数分别是首问和首答的ID
   # （该接口的功能能够由 questionAnswers 接口代替，比较点击列表中某一项展示详情，所有信息在 QuestionAnswerFeed 中都可以拿到）
  """
  查看完整回答详情，参数分别是首问和首答的ID
  （该接口的功能能够由 questionAnswers 接口代替，比较点击列表中某一项展示详情，所有信息在 QuestionAnswerFeed 中都可以拿到）
  """
  questionAnswer(questionId: BigInt!, answerId: BigInt!): QuestionAnswer
  
  # 首页推荐 - 问答
  """
  首页推荐 - 问答
  """
  recommendedQuestions(pageParam: PageParam!): QuestionFeed!
  
  # 首页推荐聚合数据接口
  """
  首页推荐聚合数据接口
  """
  recommendations(pageParam: PageParam!): TypedObjectFeed!
  
  # 查询单个审批
  """
  查询单个审批
  """
  contentRequest(requestId: BigInt!, role: RequestRole!): ContentRequest
  
  # 获取课题详情
  """
  获取课题详情
  """
  research(researchId: BigInt!): Research
  
  # 获取课题列表
  """
  获取课题列表
  """
  researches(pageParam: PageParam!): ResearchConnection
  
  # 首页推荐 - 课题
  """
  首页推荐 - 课题
  """
  recommendedResearches(pageParam: PageParam!): ResearchConnection!
  
  # 根据搜索对象类型，返回当前的热搜词，返回的数组长度最大值为 50
  """
  根据搜索对象类型，返回当前的热搜词，返回的数组长度最大值为 50
  """
  hotSearches(objectType: ObjectType!): [HotSearch!]!
  
  # 搜索补全
  """
  搜索补全
  """
  keywordCompletions(
  # 关键词
  """
  关键词
  """
  keyword: String!, 
  # 补全类型
  """
  补全类型
  """
  type: ObjectType!): [KeywordCompletion!]!
  
  # 搜索文章
  """
  搜索文章
  """
  searchArticle(keyword: String!, pageParam: PageParam!, timeRange: DateTimeRange): ArticleConnection!
  
  # 搜索作者
  """
  搜索作者
  """
  searchAuthor(keyword: String!, pageParam: PageParam!): AuthorConnection!
  
  # 搜索期刊
  """
  搜索期刊
  """
  searchJournal(keyword: String!, pageParam: PageParam!): JournalConnection!
  
  # 搜索会议
  """
  搜索会议
  """
  searchConference(keyword: String!, pageParam: PageParam!): ConferenceConnection!
  
  # 搜索机构
  """
  搜索机构
  """
  searchInstitution(keyword: String!, pageParam: PageParam!): InstitutionConnection!
  
  # 搜索教程
  """
  搜索教程
  """
  searchCourse(keyword: String!, pageParam: PageParam!): CourseConnection!
  
  # 搜索课题
  """
  搜索课题
  """
  searchResearch(keyword: String!, pageParam: PageParam!): ResearchConnection!
  
  # 搜索问题
  """
  搜索问题
  """
  searchQuestion(keyword: String!, pageParam: PageParam!): QuestionFeed!
  
  # 获取订阅条件 (DEPRECATED)
  """
  获取订阅条件 (DEPRECATED)
  """
  subscribeConditions(authorID: BigInt): SubscribeConditions!
  
  # 获取订阅文章列表 (DEPRECATED)
  """
  获取订阅文章列表 (DEPRECATED)
  """
  subscribedArticles(size: NonNegativeInt = 15, authorID: BigInt, page: NonNegativeInt = 1): [ArticleDynamic!]!
  
  # 查找时间线草稿
  """
  查找时间线草稿
  """
  timeLineDraft(timeLineId: BigInt!): TimeLine
  
  # 查询自己
  """
  查询自己
  """
  me: User
  
  # 查询其他用户
  """
  查询其他用户
  """
  user(userId: ID!): User
  
  # 查询用户列表
  """
  查询用户列表
  """
  users(input: PageParam!): UserList!
  userBasics(userIds: [ID!]!): [UserBasic!]
}

type Mutation {
  
  # 创建文章
  """
  创建文章
  """
  requestNewArticle(article: NewArticleInput!): CommonMutationResult!
  
  # 修改文章
  """
  修改文章
  """
  requestUpdateArticle(article: UpdateArticleInput!): CommonMutationResult!
  
  # 合并文章
  """
  合并文章
  """
  requestMergeArticle(leftId: BigInt!, rightId: BigInt!, resultArticle: NewArticleInput): CommonMutationResult!
  
  # 删除文章
  """
  删除文章
  """
  requestDeleteArticle(articleId: BigInt!): CommonMutationResult!
  
  # 将文章标记为已读或未读，read==true 为已读，false 为未读
  """
  将文章标记为已读或未读，read==true 为已读，false 为未读
  """
  markReadArticle(articleId: BigInt!, read: Boolean!): CommonMutationResult!
  
  # 申请创建作者信息
  """
  申请创建作者信息
  """
  requestNewAuthor(input: NewAuthorInput!): CommonMutationResult!
  
  # 申请修改作者信息
  """
  申请修改作者信息
  """
  requestUpdateAuthor(input: UpdateAuthorInput!): CommonMutationResult!
  
  # 发起合并作者信息的申请
  """
  发起合并作者信息的申请
  """
  requestMergeAuthor(leftId: BigInt!, rightId: BigInt!, resultAuthor: MergedAuthorInput!): CommonMutationResult!
  
  # 创建论文集
  """
  创建论文集
  """
  createCollection(input: CreateCollectionInput!): CommonMutationResult!
  
  # 修改论文集名称
  """
  修改论文集名称
  """
  updateCollection(input: UpdateCollectionInput!): CommonMutationResult!
  
  # 删除论文集
  """
  删除论文集
  """
  deleteCollection(collectionId: BigInt!): CommonMutationResult!
  
  # 将文章加入论文集
  """
  将文章加入论文集
  """
  storeArticleInCollection(articleId: BigInt!, collectionId: BigInt!): CommonMutationResult!
  
  # 将文章从论文集中移除
  """
  将文章从论文集中移除
  """
  removeArticleFromCollection(articleId: BigInt!, collectionId: BigInt!): CommonMutationResult!
  
  # 评论 (DEPRECATED)
  """
  评论 (DEPRECATED)
  """
  postComment(
  # 评论对象类型
  """
  评论对象类型
  """
  targetType: commentTargets!, 
  # 评论对象ID
  """
  评论对象ID
  """
  targetID: NonNegativeInt!, 
  # 内容
  """
  内容
  """
  content: String!): CreateMutationResult
  
  # 跟评 (DEPRECATED)
  """
  跟评 (DEPRECATED)
  """
  followComment(
  # 跟评ID
  """
  跟评ID
  """
  followID: NonNegativeInt!, 
  # 内容
  """
  内容
  """
  content: String!): Boolean
  
  # 修改评论 (DEPRECATED)
  """
  修改评论 (DEPRECATED)
  """
  modifyComment(
  # 评论id
  """
  评论id
  """
  commentID: BigInt!, 
  # 评论内容
  """
  评论内容
  """
  content: String!): Boolean!
  
  # 删除评论 (DEPRECATED)
  """
  删除评论 (DEPRECATED)
  """
  removeComment(
  # 评论ID
  """
  评论ID
  """
  commentID: NonNegativeInt!): Boolean
  
  # 申请创建会议
  """
  申请创建会议
  """
  requestNewConference(conference: NewConferenceInput!): CommonMutationResult!
  
  # 申请修改会议
  """
  申请修改会议
  """
  requestUpdateConference(conference: UpdateConferenceInput!): CommonMutationResult!
  
  # 申请合并会议
  """
  申请合并会议
  """
  requestMergeConference(leftId: BigInt!, rightId: BigInt!, resultConf: NewConferenceInput): CommonMutationResult!
  
  # 申请删除会议
  """
  申请删除会议
  """
  requestDeleteConference(conferenceId: BigInt!): CommonMutationResult!
  
  # 请求进行添加或删除关联的操作
  """
  请求进行添加或删除关联的操作
  """
  requestConnection(input: RequestConnectionInput!): CommonMutationResult!
  
  # 由 request 指定的 reviewer 调用，通过审核
  """
  由 request 指定的 reviewer 调用，通过审核
  """
  approveConnectionRequest(requestId: BigInt!): CommonMutationResult!
  
  # 由 request 指定的 reviewer 调用，驳回审核
  """
  由 request 指定的 reviewer 调用，驳回审核
  """
  rejectConnectionRequest(requestId: BigInt!, reason: String!): CommonMutationResult!
  
  # 由 request 指定的 reviewer 调用，表示该 request 的内容与其无关
  """
  由 request 指定的 reviewer 调用，表示该 request 的内容与其无关
  """
  ignoreConnectionRequest(requestId: BigInt!, reason: String): CommonMutationResult!
  
  # 创建教程
  """
  创建教程
  """
  createCourse(input: NewCourseInput!): CreateMutationResult!
  
  # 修改教程
  """
  修改教程
  """
  updateCourse(input: UpdateCourseInput!): CommonMutationResult!
  
  # 删除教程
  """
  删除教程
  """
  deleteCourse(id: BigInt!): CommonMutationResult!
  
  # 发布教程
  """
  发布教程
  """
  publishCourse(id: BigInt!): CommonMutationResult!
  
  # 下架教程
  """
  下架教程
  """
  hideCourse(id: BigInt!): CommonMutationResult!
  
  # 上架教程
  """
  上架教程
  """
  showCourse(id: BigInt!): CommonMutationResult!
  
  # 购买教程
  """
  购买教程
  """
  purchaseCourse(input: PurchaseCourseInput!): PaymentInfo!
  
  # 评价教程
  """
  评价教程
  """
  commentCourse(input: CourseCommentInput!): CommonMutationResult!
  
  # 申请创建机构
  """
  申请创建机构
  """
  requestNewInstitution(input: NewInstitutionInput!): CommonMutationResult!
  
  # 申请修改机构
  """
  申请修改机构
  """
  requestUpdateInstitution(input: UpdateInstitutionInput!): CommonMutationResult!
  
  # 申请删除机构
  """
  申请删除机构
  """
  requestDeleteInstitution(institutionId: BigInt!): CommonMutationResult!
  
  # 申请合并机构
  """
  申请合并机构
  """
  requestMergeInstitution(leftId: BigInt!, rightId: BigInt!, resultInstitution: NewInstitutionInput): CommonMutationResult!
  
  # 创建期刊
  """
  创建期刊
  """
  requestNewJournal(journal: NewJournalInput!): CommonMutationResult!
  
  # 修改期刊
  """
  修改期刊
  """
  requestUpdateJournal(journal: UpdateJournalInput!): CommonMutationResult!
  
  # 删除期刊
  """
  删除期刊
  """
  requestDeleteJournal(journalId: BigInt!): CommonMutationResult!
  
  # 合并机构
  """
  合并机构
  """
  requestMergeJournal(leftId: BigInt!, rightId: BigInt!, resultJournal: NewJournalInput): CommonMutationResult!
  
  # 新建思维导图草稿
  """
  新建思维导图草稿
  """
  newMindMapDraft(input: NewMindMapDraftInput!): MindMap!
  
  # 编辑思维导图草稿
  """
  编辑思维导图草稿
  """
  updateMindMapDraft(input: UpdateMindMapInput!): MindMap!
  
  # 删除思维导图草稿
  """
  删除思维导图草稿
  """
  deleteMindMapDraft(mindMapId: BigInt!): CommonMutationResult!
  
  # 申请发布思维导图，该思维导图来自于申请者的草稿
  """
  申请发布思维导图，该思维导图来自于申请者的草稿
  """
  requestPostMindMap(mindMapId: BigInt!): CommonMutationResult!
  
  # 申请修改思维导图，包括任何已经发布的思维导图
  """
  申请修改思维导图，包括任何已经发布的思维导图
  """
  requestUpdateMindMap(input: UpdateMindMapInput!): CommonMutationResult!
  
  # 添加笔记 (DEPRECATED)
  """
  添加笔记 (DEPRECATED)
  """
  createNote(input: createNoteInput): CreateMutationResult
  
  # 修改笔记 (DEPRECATED)
  """
  修改笔记 (DEPRECATED)
  """
  updateNote(noteID: BigInt!, input: updateNoteInput): Boolean
  
  # 发布笔记 (DEPRECATED)
  """
  发布笔记 (DEPRECATED)
  """
  publishNote(noteID: BigInt): Boolean
  
  # 删除笔记 (DEPRECATED)
  """
  删除笔记 (DEPRECATED)
  """
  removeNote(noteID: BigInt): Boolean
  
  # 创建问题
  """
  创建问题
  """
  newQuestion(input: NewQuestionInput!): Question!
  
  # 删除问题
  """
  删除问题
  """
  deleteQuestion(questionId: BigInt!): CommonMutationResult!
  
  # 更新问题
  """
  更新问题
  """
  updateQuestion(input: UpdateQuestionInput!): Question!
  
  # 发布问题
  """
  发布问题
  """
  postQuestion(questionId: BigInt!): CommonMutationResult!
  
  # 提问者确认回答者已经清除理解问题
  """
  提问者确认回答者已经清除理解问题
  """
  questionerConfirm(input: ConfirmInput!): CommonMutationResult!
  
  # 选择一位回答者，并完成支付
  """
  选择一位回答者，并完成支付
  """
  selectAndPay(input: SelectAndPayInput!): PaymentInfo!
  
  # 发起追问
  """
  发起追问
  """
  addSubQuestion(questionId: BigInt!): CommonMutationResult!
  
  # 确认并接受答案
  """
  确认并接受答案
  """
  acceptAnswer(answerId: BigInt!): CommonMutationResult!
  
  # 加入回答者列表
  """
  加入回答者列表
  """
  addToAnswerers(questionId: BigInt!): CommonMutationResult!
  
  # 移出回答者列表
  """
  移出回答者列表
  """
  removeFromAnswerers(questionId: BigInt!): CommonMutationResult!
  
  # 回答者确认已经清楚理解问题
  """
  回答者确认已经清楚理解问题
  """
  answererConfirm(input: ConfirmInput!): CommonMutationResult!
  
  # 创建回答
  """
  创建回答
  """
  newAnswer(input: NewAnswerInput!): Answer!
  
  # 更新回答
  """
  更新回答
  """
  updateAnswer(input: UpdateAnswerInput!): Answer!
  
  # 提交回答
  """
  提交回答
  """
  submitAnswer(answerId: BigInt!): CommonMutationResult!
  
  # 针对追问的补充回答
  """
  针对追问的补充回答
  """
  addSubAnswer(questionId: BigInt!): CommonMutationResult!
  
  # 回答者发布完整问答，并旁听价格等信息
  """
  回答者发布完整问答，并旁听价格等信息
  """
  releaseQuestionAnswer(input: ReleaseQuestionAnswerInput!): CommonMutationResult!
  
  # 旁听者购买问答
  """
  旁听者购买问答
  """
  buyQuestionAnswer(qaId: BigInt!): PaymentInfo!
  
  # 对已购买的完整问答发表评价
  """
  对已购买的完整问答发表评价
  """
  postQuestionAnswerReview(input: PostQuestionAnswerReviewInput!): CommonMutationResult!
  
  # 举报数据对象的不恰当行为
  """
  举报数据对象的不恰当行为
  """
  reportIssueOnObject(input: NewReportInput!): CommonMutationResult!
  
  # 由 request 指定的 reviewer 调用，通过审核
  """
  由 request 指定的 reviewer 调用，通过审核
  """
  approveContentRequest(requestId: BigInt!): CommonMutationResult!
  
  # 由 request 指定的 reviewer 调用，驳回审核
  """
  由 request 指定的 reviewer 调用，驳回审核
  """
  rejectContentRequest(requestId: BigInt!, reason: String!): CommonMutationResult!
  
  # 由 request 指定的 reviewer 调用，表示该 request 的内容与其无关
  """
  由 request 指定的 reviewer 调用，表示该 request 的内容与其无关
  """
  ignoreContentRequest(requestId: BigInt!, reason: String): CommonMutationResult!
  
  # 创建课题
  """
  创建课题
  """
  requestNewResearch(input: NewResearchInput!): CommonMutationResult!
  
  # 修改课题
  """
  修改课题
  """
  requestUpdateResearch(input: UpdateResearchInput!): CommonMutationResult!
  
  # 删除课题
  """
  删除课题
  """
  requestDeleteResearch(researchId: BigInt!): CommonMutationResult!
  
  # 新建时间线草稿
  """
  新建时间线草稿
  """
  newTimeLineDraft(input: NewTimeLineDraftInput!): TimeLine!
  
  # 编辑时间线草稿
  """
  编辑时间线草稿
  """
  updateTimeLineDraft(input: UpdateTimeLineInput!): TimeLine!
  
  # 删除时间线草稿
  """
  删除时间线草稿
  """
  deleteTimeLineDraft(timeLineId: BigInt!): CommonMutationResult!
  
  # 申请发布时间线，该时间线来自于申请者的草稿
  """
  申请发布时间线，该时间线来自于申请者的草稿
  """
  requestPostTimeLine(timeLineId: BigInt!): CommonMutationResult!
  
  # 申请修改时间线，包括任何已经发布的时间线
  """
  申请修改时间线，包括任何已经发布的时间线
  """
  requestUpdateTimeLine(input: UpdateTimeLineInput!): CommonMutationResult!
  
  # 上传图片
  """
  上传图片
  """
  uploadImage(file: Upload!, type: UploadPurpose!): UploadResult!
  
  # 完善个人资料
  """
  完善个人资料
  """
  updateMyProfile(input: UpdateMyProfileInput!): CommonMutationResult
  
  # 关注其他作者
  """
  关注其他作者
  """
  followAuthor(authorId: BigInt!): CommonMutationResult
  
  # 取消关注其他作者
  """
  取消关注其他作者
  """
  unfollowAuthor(authorId: BigInt!): CommonMutationResult
  
  # 订阅（关注）除 Author 之外的其他数据对象，如课题/文章/期刊/会议等
  """
  订阅（关注）除 Author 之外的其他数据对象，如课题/文章/期刊/会议等
  """
  subscribeObject(objectId: BigInt!, type: ObjectType!): CommonMutationResult!
  
  # 取消订阅（关注）除 Author 之外的其他数据对象，如课题/文章/期刊/会议等
  """
  取消订阅（关注）除 Author 之外的其他数据对象，如课题/文章/期刊/会议等
  """
  unsubscribeObject(objectId: BigInt!, type: ObjectType!): CommonMutationResult!
  
  # 分享数据对象给好友
  """
  分享数据对象给好友
  """
  shareObject(objectId: BigInt!, type: ObjectType!, userId: BigInt!): CommonMutationResult!
  
  # 提现
  """
  提现
  """
  requestWithdrawal: CommonMutationResult!
  
  # 提交反馈
  """
  提交反馈
  """
  submitUserFeedback(input: SubmitUserFeedbackInput!): CommonMutationResult!
  
  # 撤销反馈
  """
  撤销反馈
  """
  cancelUserFeedback(feedbackId: BigInt!): CommonMutationResult!
}


# 作者
"""
作者
"""
type Author implements TypedObject {
  id: BigInt!
  isA: String!
  
  # 作者名
  """
  作者名
  """
  fullname: String!
  
  # 作者简介
  """
  作者简介
  """
  desc: String
  
  # 头像
  """
  头像
  """
  avatar: URL
  
  # 行为统计
  """
  行为统计
  """
  statistics: AuthorStatistics!
  
  # 学者统计数据，这个数据对于默认作者是null，对于学者是non-null
  """
  学者统计数据，这个数据对于默认作者是null，对于学者是non-null
  """
  statisticsAsScholar: ScholarStatistics
  
  # 发表的文章
  """
  发表的文章
  """
  articles(pageParam: PageParam): ArticleConnection
  
  # 所属的机构
  """
  所属的机构
  """
  institutions(pageParam: PageParam): InstitutionConnection
  
  # 创作的教程
  """
  创作的教程
  """
  courses(
  # 教程状态，传入参数获取对应状态的教程；传入空数组返回所有状态的教程
  """
  教程状态，传入参数获取对应状态的教程；传入空数组返回所有状态的教程
  """
  status: [CourseStatus!]!, 
  # 分页参数
  """
  分页参数
  """
  pageParam: PageParam): CourseConnection
  
  # 作为回答者参与的完整问答
  """
  作为回答者参与的完整问答
  """
  questionAnswers(pageParam: PageParam): QuestionAnswerConnection
  
  # 显示作者研究领域关联关系的思维导图
  """
  显示作者研究领域关联关系的思维导图
  """
  mindMap: MindMap
  
  # 作者研究工作的时间线
  """
  作者研究工作的时间线
  """
  timeLine: TimeLine
  
  # 审核状态
  """
  审核状态
  """
  status: MetaDataStatus!
  
  # 作者动态，用于在作者详情页中展示该作者最近的创作
  """
  作者动态，用于在作者详情页中展示该作者最近的创作
  """
  dynamics(pageParam: PageParam!): DynamicFeed!
  
  # 作者社区贡献，在作者详情页展示作者对公共数据做了哪些维护工作
  """
  作者社区贡献，在作者详情页展示作者对公共数据做了哪些维护工作
  """
  contributions(pageParam: PageParam!): DynamicFeed!
  
  # 社区内容维护的主要贡献者，至多返回 10 位用户
  """
  社区内容维护的主要贡献者，至多返回 10 位用户
  """
  majorContributors: [Author!]!
  
  # 当前用户是否关注作者
  """
  当前用户是否关注作者
  """
  isFollowed: Boolean!
}

type AuthorStatistics {
  
  # “我”关注的作者数量
  """
  “我”关注的作者数量
  """
  nFollows: NonNegativeInt!
  
  # 关注“我”的作者数量
  """
  关注“我”的作者数量
  """
  nFollowers: NonNegativeInt!
  
  # “我”创作的教程数量
  """
  “我”创作的教程数量
  """
  nCourses: NonNegativeInt!
  
  # “我”的提问数
  """
  “我”的提问数
  """
  nQuestions: NonNegativeInt!
  
  # “我”创作的回答数
  """
  “我”创作的回答数
  """
  nAnswers: NonNegativeInt!
  
  # 浏览过“我”的创作内容的总人次
  """
  浏览过“我”的创作内容的总人次
  """
  nTotalBrowsers: NonNegativeInt!
}

type ScholarStatistics {
  
  # H-Index
  """
  H-Index
  """
  hIndex: NonNegativeInt!
  
  # 发表的文章数量
  """
  发表的文章数量
  """
  nArticles: NonNegativeInt!
  
  # 总被引数
  """
  总被引数
  """
  citationsInTotal: NonNegativeInt!
  
  # 他引数
  """
  他引数
  """
  citationsByOthers: NonNegativeInt!
}

input NewAuthorInput {
  
  # 作者名
  """
  作者名
  """
  fullname: String!
  
  # 作者简介
  """
  作者简介
  """
  desc: String!
}

input UpdateAuthorInput {
  authorId: BigInt!
  
  # 作者名
  """
  作者名
  """
  fullname: String
  
  # 作者简介
  """
  作者简介
  """
  desc: String
  
  # 头像
  """
  头像
  """
  avatar: URL
}

input MergedAuthorInput {
  
  # 作者全名
  """
  作者全名
  """
  fullname: String!
  
  # 作者简介
  """
  作者简介
  """
  desc: String!
  
  # 头像
  """
  头像
  """
  avatar: URL
}


# 论文集列表 / 论文收藏夹
"""
论文集列表 / 论文收藏夹
"""
type Collection {
  id: BigInt!
  
  # 论文集名称
  """
  论文集名称
  """
  title: String!
  
  # 描述
  """
  描述
  """
  description: String
  
  # 论文集中的文章
  """
  论文集中的文章
  """
  articles(pageParam: PageParam): ArticleConnection
}

input CreateCollectionInput {
  title: String!
  description: String
}

input UpdateCollectionInput {
  
  # 论文集Id
  """
  论文集Id
  """
  id: BigInt!
  title: String
  description: String
}


# 可评论对象 (DEPRECATED)
"""
可评论对象 (DEPRECATED)
"""
enum commentTargets {
  
  # 笔记
  """
  笔记
  """
  note
  
  # 机构
  """
  机构
  """
  institution
  
  # 会议
  """
  会议
  """
  conference
}


# 评论 (DEPRECATED)
"""
评论 (DEPRECATED)
"""
type Comment {
  id: BigInt!
  
  # 评论内容
  """
  评论内容
  """
  content: String!
  
  # 评论者
  """
  评论者
  """
  from_author: User!
  
  # 被评论者
  """
  被评论者
  """
  to_author: User
  
  # 父级评论ID
  """
  父级评论ID
  """
  comment_id: BigInt
  
  # 创建时间
  """
  创建时间
  """
  created_at: DateTime
  
  # 更新时间
  """
  更新时间
  """
  updated_at: DateTime
}

scalar DateTime

scalar EmailAddress

scalar NonNegativeInt

scalar NegativeInt

scalar NonPositiveInt

scalar PhoneNumber

scalar UnsignedInt

scalar URL

scalar BigInt

scalar Long

scalar GUID

scalar HexColorCode

scalar IPv4

scalar IPv6

scalar MAC

scalar Port

scalar RGB

scalar RGBA

scalar JSON

scalar JSONObject

scalar NonNegativeFloat

scalar Currency


# 系统中支持的对象类型
"""
系统中支持的对象类型
"""
enum ObjectType {
  
  # 作者
  """
  作者
  """
  AUTHOR
  
  # 文章
  """
  文章
  """
  ARTICLE
  
  # 研究课题
  """
  研究课题
  """
  RESEARCH
  
  # 会议
  """
  会议
  """
  CONFERENCE
  
  # 机构
  """
  机构
  """
  INSTITUTION
  
  # 问答
  """
  问答
  """
  QUESTIONANSWER
  
  # 教程
  """
  教程
  """
  COURSE
  
  # 期刊
  """
  期刊
  """
  JOURNAL
}

interface TypedObject {
  id: BigInt!
  isA: String!
}


# 泛型对象，包含 id 和对象类型（用于类型对象）
"""
泛型对象，包含 id 和对象类型（用于类型对象）
"""
type GenericObject {
  id: BigInt!
  type: ObjectType!
}


# 泛型对象，包含 id 和对象类型（用于参数对象）
"""
泛型对象，包含 id 和对象类型（用于参数对象）
"""
input GenericObjectInput {
  id: BigInt!
  type: ObjectType!
}


# 元数据状态
"""
元数据状态
"""
enum MetaDataStatus {
  
  # 创建元数据的请求正在审核中
  """
  创建元数据的请求正在审核中
  """
  CREATE_UNDER_REVIEW
  
  # 更新元数据的请求正在审核中
  """
  更新元数据的请求正在审核中
  """
  UPDATE_UNDER_REVIEW
  
  # 关联元数据的请求正在审核中
  """
  关联元数据的请求正在审核中
  """
  CONNECTION_UNDER_REVIEW
  
  # 合并请求正在审核中
  """
  合并请求正在审核中
  """
  MERGE_UNDER_REVIEW
  
  # 删除元数据的请求正在审核中
  """
  删除元数据的请求正在审核中
  """
  DELETE_UNDER_REVIEW
  
  # 创建、更新、关联请求已通过
  """
  创建、更新、关联请求已通过
  """
  APPROVED
  
  # 数据已合并，当前数据已失效
  """
  数据已合并，当前数据已失效
  """
  DELETED_AFTER_MERGE
}


# 文章索引类型
"""
文章索引类型
"""
enum ArticleIndex {
  
  # SCI 科学引文索引
  """
  SCI 科学引文索引
  """
  SCI
  
  # EI 工程索引
  """
  EI 工程索引
  """
  EI
}


# 用于在 Query 中限定排序方向
"""
用于在 Query 中限定排序方向
"""
enum SortDirection {
  ASCEND
  DESCEND
}


# 分页请求参数
"""
分页请求参数
"""
input PageParam {
  
  # 分页请求中的每页数量，服务端限制最大值 30
  """
  分页请求中的每页数量，服务端限制最大值 30
  """
  first: NonNegativeInt! = 20
  
  # 分页游标，以 base64 编码的字符串，空字符串表示从头开始
  """
  分页游标，以 base64 编码的字符串，空字符串表示从头开始
  """
  after: String! = ""
}


# 分页信息，作为分页请求返回对象的一部分
"""
分页信息，作为分页请求返回对象的一部分
"""
type PageInfo {
  
  # 分页游标，本页中的最后一个元素的游标，以 base64 编码的字符串
  """
  分页游标，本页中的最后一个元素的游标，以 base64 编码的字符串
  """
  endCursor: String!
  
  # 是否还有下一页
  """
  是否还有下一页
  """
  hasNextPage: Boolean!
}

enum OrderStatus {
  
  # 订单已创建
  """
  订单已创建
  """
  CREATED
  
  # 订单已支付
  """
  订单已支付
  """
  PAID
  
  # 订单已取消
  """
  订单已取消
  """
  CANCEL
}


# Float范围类型
"""
Float范围类型
"""
input FloatRange {
  upper: Float
  lower: Float
}


# 货币范围类型
"""
货币范围类型
"""
input CurrencyRange {
  upper: Currency!
  lower: Currency!
}


# DateTime范围类型
"""
DateTime范围类型
"""
input DateTimeRange {
  
  # 时间轴上更靠后的时间，upper 晚于 lower
  """
  时间轴上更靠后的时间，upper 晚于 lower
  """
  upper: DateTime
  
  # 时间轴上更靠前的时间，lower 早于 upper
  """
  时间轴上更靠前的时间，lower 早于 upper
  """
  lower: DateTime
}


# 默认Mutation结果
"""
默认Mutation结果
"""
type CommonMutationResult {
  success: Boolean!
  message: String
}


# 创建类 Mutation 返回类型
"""
创建类 Mutation 返回类型
"""
type CreateMutationResult {
  success: Boolean!
  id: BigInt!
}

type TypedObjectEdge {
  node: TypedObject!
  cursor: String!
}


# TypedObject 的分页
"""
TypedObject 的分页
"""
type TypedObjectFeed {
  edges: [TypedObjectEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}


# 会议
"""
会议
"""
type Conference implements TypedObject {
  id: BigInt!
  isA: String!
  
  # 会议中文名，如无，传入空字符串
  """
  会议中文名，如无，传入空字符串
  """
  localName: String!
  
  # 会议英文名，如无，传入空字符串
  """
  会议英文名，如无，传入空字符串
  """
  globalName: String!
  
  # 会议地点
  """
  会议地点
  """
  address: String
  
  # 截稿日期
  """
  截稿日期
  """
  deadline: DateTime
  
  # 会议说明
  """
  会议说明
  """
  summary: String
  
  # 联系方式
  """
  联系方式
  """
  contact: String
  
  # 会议状态
  """
  会议状态
  """
  status: MetaDataStatus!
  
  # 行为统计
  """
  行为统计
  """
  statistics: ConferenceStatistics!
  
  # 会议动态，用于在会议详情页中展示该元数据最近的变化
  """
  会议动态，用于在会议详情页中展示该元数据最近的变化
  """
  dynamics(pageParam: PageParam!): DynamicFeed!
  
  # 社区内容维护的主要贡献者，至多返回 10 位用户
  """
  社区内容维护的主要贡献者，至多返回 10 位用户
  """
  majorContributors: [Author!]!
  
  # 当前用户是否关注会议
  """
  当前用户是否关注会议
  """
  isSubscribed: Boolean!
}

type ConferenceStatistics {
  
  # 关注人数
  """
  关注人数
  """
  nSubscribers: NonNegativeInt!
}


# 新建会议 输入参数
"""
新建会议 输入参数
"""
input NewConferenceInput {
  
  # 会议中文名，如无，传入空字符串
  """
  会议中文名，如无，传入空字符串
  """
  localName: String!
  
  # 会议英文名，如无，传入空字符串
  """
  会议英文名，如无，传入空字符串
  """
  globalName: String!
  
  # 会议地点
  """
  会议地点
  """
  address: String
  
  # 截稿日期
  """
  截稿日期
  """
  deadline: DateTime
  
  # 会议说明
  """
  会议说明
  """
  summary: String
  
  # 联系方式
  """
  联系方式
  """
  contact: String
}


# 更新会议 输入参数
"""
更新会议 输入参数
"""
input UpdateConferenceInput {
  id: BigInt!
  
  # 会议中文名
  """
  会议中文名
  """
  localName: String
  
  # 会议英文名
  """
  会议英文名
  """
  globalName: String
  
  # 会议地点
  """
  会议地点
  """
  address: String
  
  # 截稿日期
  """
  截稿日期
  """
  deadline: DateTime
  
  # 会议说明
  """
  会议说明
  """
  summary: String
  
  # 联系方式
  """
  联系方式
  """
  contact: String
}


# 能够用来排序的字段
"""
能够用来排序的字段
"""
enum ConferenceSortableField {
  
  # 会议英文名称
  """
  会议英文名称
  """
  GLOBAL_NAME
}


# 会议排序控制参数
"""
会议排序控制参数
"""
input ConferenceSortParam {
  field: ConferenceSortableField!
  direction: SortDirection!
}


# 会议集合查询参数
"""
会议集合查询参数
"""
input ConferenceConnectionInput {
  pageParam: PageParam!
  sortParam: ConferenceSortParam
}

enum ConnectionOperation {
  ADD
  REMOVE
}


# 存储作者关联项的分页信息
"""
存储作者关联项的分页信息
"""
type AuthorEdge {
  node: Author!
  cursor: String!
}


# 作者关联项
"""
作者关联项
"""
type AuthorConnection {
  edges: [AuthorEdge]
  pageInfo: PageInfo!
  totalCount: Int!
}


# 存储文章关联项的分页信息
"""
存储文章关联项的分页信息
"""
type ArticleEdge {
  node: Article!
  cursor: String!
}


# 文章关联项
"""
文章关联项
"""
type ArticleConnection {
  edges: [ArticleEdge]
  pageInfo: PageInfo!
  totalCount: Int!
}


# 存储研究课题关联项的分页信息
"""
存储研究课题关联项的分页信息
"""
type ResearchEdge {
  node: Research!
  cursor: String!
}


# 研究课题关联项
"""
研究课题关联项
"""
type ResearchConnection {
  edges: [ResearchEdge]
  pageInfo: PageInfo!
  totalCount: Int!
}


# 存储期刊关联项的分页信息
"""
存储期刊关联项的分页信息
"""
type JournalEdge {
  node: Journal!
  cursor: String!
}


# 期刊关联项
"""
期刊关联项
"""
type JournalConnection {
  edges: [JournalEdge]!
  pageInfo: PageInfo!
  totalCount: Int!
}


# 存储会议关联项的分页信息
"""
存储会议关联项的分页信息
"""
type ConferenceEdge {
  node: Conference!
  cursor: String!
}


# 会议关联项
"""
会议关联项
"""
type ConferenceConnection {
  edges: [ConferenceEdge]
  pageInfo: PageInfo!
  totalCount: Int!
}


# 存储机构关联项的分页信息
"""
存储机构关联项的分页信息
"""
type InstitutionEdge {
  node: Institution!
  cursor: String!
}


# 机构关联项
"""
机构关联项
"""
type InstitutionConnection {
  edges: [InstitutionEdge]
  pageInfo: PageInfo!
  totalCount: Int!
}


# 存储问答关联项的分页信息

# 完整问答的分页信息
"""
完整问答的分页信息
"""
type QuestionAnswerEdge {
  node: QuestionAnswer!
  
  # base64 编码的字符串
  """
  base64 编码的字符串
  """
  cursor: String!
}


# 问答关联项
"""
问答关联项
"""
type QuestionAnswerConnection {
  edges: [QuestionAnswerEdge]
  pageInfo: PageInfo!
  totalCount: Int!
}


# 存储教程关联项的分页信息

# 教程及其游标，用于 CourseFeed
"""
教程及其游标，用于 CourseFeed
"""
type CourseEdge {
  node: Course!
  
  # base64 编码的字符串
  """
  base64 编码的字符串
  """
  cursor: String!
}


# 教程关联项
"""
教程关联项
"""
type CourseConnection {
  edges: [CourseEdge]
  pageInfo: PageInfo!
  totalCount: Int!
}


# 存储论文集关联项的分页信息
"""
存储论文集关联项的分页信息
"""
type CollectionEdge {
  node: Collection!
  cursor: String!
}


# 论文集关联项
"""
论文集关联项
"""
type CollectionConnection {
  edges: [CollectionEdge]
  pageInfo: PageInfo!
  totalCount: Int!
}


# ##############################################################################
 # # RequestConnectionInput
 # ##############################################################################
input RequestConnectionInput {
  master: GenericObjectInput!
  slaves: [GenericObjectInput!]!
  operation: ConnectionOperation!
}


# 更新日志
"""
更新日志
"""
type UpdateLog {
  id: BigInt!
  content: String!
  updatedAt: DateTime!
}


# 教程类型
"""
教程类型
"""
enum CourseType {
  
  # 论文复现
  """
  论文复现
  """
  REPETITION
  
  # 论文解读
  """
  论文解读
  """
  INTERPRETATION
}

enum CourseStatus {
  
  # 教程草稿，尚未发布
  """
  教程草稿，尚未发布
  """
  DRAFT
  
  # 教程已发布，非购买者可以看到教程预览
  """
  教程已发布，非购买者可以看到教程预览
  """
  PUBLIC
  
  # 教程发布后下架，非购买者看不到该教程任何信息
  """
  教程发布后下架，非购买者看不到该教程任何信息
  """
  PRIVATE
}


# 教程
"""
教程
"""
type Course implements TypedObject {
  id: BigInt!
  isA: String!
  title: String!
  
  # 内容摘要，用于向未购买教程的用户展示
  """
  内容摘要，用于向未购买教程的用户展示
  """
  brief: String!
  
  # 以 JSON 字符串保存的目录信息
  """
  以 JSON 字符串保存的目录信息
  """
  contentTable: String!
  
  # 正文
  """
  正文
  """
  content: String
  type: CourseType!
  price: Currency!
  score: Float!
  author: Author!
  createdAt: DateTime!
  updatedAt: DateTime
  updateLogs: [UpdateLog]
  
  # 关联的文章
  """
  关联的文章
  """
  articles: [Article!]!
  
  # 关联的课题
  """
  关联的课题
  """
  researches: [Research!]!
  
  # 购买教程的用户的评论
  """
  购买教程的用户的评论
  """
  comments(pageParam: PageParam): CourseCommentFeed!
  
  # 统计
  """
  统计
  """
  statistics: CourseStatistics!
  
  # 教程状态
  """
  教程状态
  """
  status: CourseStatus!
  
  # 当前用户是否关注教程
  """
  当前用户是否关注教程
  """
  isSubscribed: Boolean!
}

type CourseStatistics {
  
  # 关注人数
  """
  关注人数
  """
  nSubscribers: NonNegativeInt!
  
  # 购买人数
  """
  购买人数
  """
  nBuyers: NonNegativeInt!
  
  # 浏览详情但未购买人数，该数据只有创作者可见
  """
  浏览详情但未购买人数，该数据只有创作者可见
  """
  nBrowsers: NonNegativeInt!
  
  # 用于教程作者查看自己创作的教程的累计收益；除此情况外，返回 null
  """
  用于教程作者查看自己创作的教程的累计收益；除此情况外，返回 null
  """
  totalGain: Currency
  
  # 教程作者更新教程后，购买者是否还未读；教程作者请求自己的原创教程时，该值为 null
  """
  教程作者更新教程后，购买者是否还未读；教程作者请求自己的原创教程时，该值为 null
  """
  hasUnreadUpdate: Boolean
}


# 教程评价
"""
教程评价
"""
type CourseComment {
  
  # 评价ID
  """
  评价ID
  """
  id: BigInt!
  
  # 评价用户
  """
  评价用户
  """
  user: User!
  
  # 用户评分
  """
  用户评分
  """
  score: Float!
  
  # 评价内容
  """
  评价内容
  """
  content: String!
  
  # 是否有效。对于论文复现应该是是否能够重现，对于论文解读应该是是否帮助理解
  """
  是否有效。对于论文复现应该是是否能够重现，对于论文解读应该是是否帮助理解
  """
  useful: Boolean!
  
  # 评价对应的教程
  """
  评价对应的教程
  """
  course: Course!
}


# 教程评论及其游标，用于 CourseCommentFeed
"""
教程评论及其游标，用于 CourseCommentFeed
"""
type CourseCommentEdge {
  node: CourseComment!
  
  # base64 编码的字符串
  """
  base64 编码的字符串
  """
  cursor: String!
}


# 教程评论列表，以流的方式组织
"""
教程评论列表，以流的方式组织
"""
type CourseCommentFeed {
  edges: [CourseCommentEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input CourseCommentInput {
  courseId: BigInt!
  userId: ID!
  
  # 用户评分
  """
  用户评分
  """
  score: Float!
  
  # 评价内容
  """
  评价内容
  """
  content: String!
  
  # 是否有效。对于论文复现应该是是否能够重现，对于论文解读应该是是否帮助理解
  """
  是否有效。对于论文复现应该是是否能够重现，对于论文解读应该是是否帮助理解
  """
  useful: Boolean!
}


# 教程过滤参数
"""
教程过滤参数
"""
input CourseFilterParam {
  
  # 教程类型：论文解读、论文复现
  """
  教程类型：论文解读、论文复现
  """
  type: CourseType
  
  # 教程价格区间
  """
  教程价格区间
  """
  price: CurrencyRange
  
  # 教程评分区间
  """
  教程评分区间
  """
  score: FloatRange
  
  # 教程作者ID，可以传入多个
  """
  教程作者ID，可以传入多个
  """
  authorIds: [BigInt!]
  
  # 教程更新时间
  """
  教程更新时间
  """
  updatedWhile: DateTimeRange
  
  # 教程相关文章ID，可以传入多个
  """
  教程相关文章ID，可以传入多个
  """
  articles: [BigInt!]!
  
  # 教程相关课题ID，可以传入多个
  """
  教程相关课题ID，可以传入多个
  """
  researches: [BigInt!]!
}


# 能够用来排序的字段
"""
能够用来排序的字段
"""
enum CourseSortableField {
  
  # 创建日期
  """
  创建日期
  """
  CREATED
  
  # 更新日期
  """
  更新日期
  """
  UPDATED
  
  # 用户评分
  """
  用户评分
  """
  SCORE
  
  # 价格
  """
  价格
  """
  PRICE
}


# 排序控制参数
"""
排序控制参数
"""
input CourseSortParam {
  field: CourseSortableField!
  direction: SortDirection!
}


# 身份无关的教程集合查询参数
"""
身份无关的教程集合查询参数
"""
input CourseCollectionInput {
  
  # 分页请求参数
  """
  分页请求参数
  """
  pageParam: PageParam
  
  # 可选的过滤器参数
  """
  可选的过滤器参数
  """
  filterParam: CourseFilterParam
  
  # 可选的排序参数
  """
  可选的排序参数
  """
  sortParam: CourseSortParam
}


# 教程列表，以流的方式组织
"""
教程列表，以流的方式组织
"""
type CourseFeed {
  edges: [CourseEdge!]!
  pageInfo: PageInfo!
}


# 新建教程 输入参数
"""
新建教程 输入参数
"""
input NewCourseInput {
  title: String!
  brief: String!
  contentTable: String!
  content: String!
  type: CourseType!
  price: Currency!
  articles: [BigInt!]
  researches: [BigInt!]
}


# 更新教程 输入参数
"""
更新教程 输入参数
"""
input UpdateCourseInput {
  courseId: BigInt!
  title: String
  brief: String
  contentTable: String
  content: String
  type: CourseType
  price: Currency
  
  # 该参数对于未发布的教程是可选的，对于已发布的教程是必填的
  """
  该参数对于未发布的教程是可选的，对于已发布的教程是必填的
  """
  updateLog: String
  articles: [BigInt!]
  researches: [BigInt!]
}

input PurchaseCourseInput {
  
  # Course Id
  """
  Course Id
  """
  id: BigInt!
  
  # 支付方式
  """
  支付方式
  """
  paymentType: PaymentType!
  
  # 交易码，需要先通过 generateTradeNumber 接口获取
  """
  交易码，需要先通过 generateTradeNumber 接口获取
  """
  tradeNumber: String!
  
  # 回调URL
  """
  回调URL
  """
  callbackUrl: URL!
}

enum DynamicAction {
  
  # 内容更新
  """
  内容更新
  """
  CONTENT_UPDATED
  
  # 添加关联
  """
  添加关联
  """
  ADD_CONNECTION
  
  # 移除关联
  """
  移除关联
  """
  REMOVE_CONNECTION
  
  # 作者发表新作品，教程
  """
  作者发表新作品，教程
  """
  POST_WORKS
  
  # 关注作者
  """
  关注作者
  """
  FOLLOW_AUTHOR
  
  # 订阅
  """
  订阅
  """
  SUBSCRIBE
  
  # 发布问题
  """
  发布问题
  """
  POST_QUESTION
  
  # 回答问题
  """
  回答问题
  """
  POST_ANSWER
}


# 动态
 # 接口遵循 who does what to whom 的语义
 # who: subject
 # what: action
 # whom: object
"""
动态
接口遵循 who does what to whom 的语义
who: subject
what: action
whom: object
"""
type Dynamic {
  id: BigInt!
  
  # 动态的主体，如文章更新，则主体是文章，作者发表教程，主体是作者
  """
  动态的主体，如文章更新，则主体是文章，作者发表教程，主体是作者
  """
  subject: TypedObject!
  
  # subject对象标题，subject是作者的话，该值即为作者名
  """
  subject对象标题，subject是作者的话，该值即为作者名
  """
  subjectTitle: String!
  
  # 发生的动作
  """
  发生的动作
  """
  action: DynamicAction!
  
  # 如果动作是关联/发表，那么object对应关联的对象或发表的教程、问答；对于其他动作，该字段为 null
  """
  如果动作是关联/发表，那么object对应关联的对象或发表的教程、问答；对于其他动作，该字段为 null
  """
  object: TypedObject
  
  # object对象标题
  """
  object对象标题
  """
  objectTitle: String!
  
  # 预览内容
  """
  预览内容
  """
  preview: String!
  
  # 时间记录
  """
  时间记录
  """
  createdAt: DateTime!
}


# 动态的分页信息
"""
动态的分页信息
"""
type DynamicEdge {
  node: Dynamic!
  cursor: String!
}


# 动态流
"""
动态流
"""
type DynamicFeed {
  edges: [DynamicEdge]
  pageInfo: PageInfo!
  totalCount: Int!
}

input DynamicsOfInterestInput {
  pageParam: PageParam!
}


# 机构
"""
机构
"""
type Institution implements TypedObject {
  id: BigInt!
  isA: String!
  
  # 机构中文名，如无，传入空字符串
  """
  机构中文名，如无，传入空字符串
  """
  localName: String!
  
  # 机构英文名，如无，传入空字符串
  """
  机构英文名，如无，传入空字符串
  """
  globalName: String!
  
  # 机构简介
  """
  机构简介
  """
  desc: String!
  
  # 联系人姓名
  """
  联系人姓名
  """
  contact: String
  
  # 联系电话
  """
  联系电话
  """
  tel: String
  
  # 联系邮箱
  """
  联系邮箱
  """
  email: String
  
  # 机构地址
  """
  机构地址
  """
  address: String
  
  # 机构数据状态
  """
  机构数据状态
  """
  status: MetaDataStatus!
  
  # 机构动态，用于在机构详情页中展示该元数据最近的变化
  """
  机构动态，用于在机构详情页中展示该元数据最近的变化
  """
  dynamics(pageParam: PageParam!): DynamicFeed!
  
  # 社区内容维护的主要贡献者，至多返回 10 位用户
  """
  社区内容维护的主要贡献者，至多返回 10 位用户
  """
  majorContributors: [Author!]!
  
  # 当前用户是否关注机构
  """
  当前用户是否关注机构
  """
  isSubscribed: Boolean!
}


# 新建机构 输入参数
"""
新建机构 输入参数
"""
input NewInstitutionInput {
  
  # 机构中文名，如无，传入空字符串
  """
  机构中文名，如无，传入空字符串
  """
  localName: String!
  
  # 机构英文名，如无，传入空字符串
  """
  机构英文名，如无，传入空字符串
  """
  globalName: String!
  
  # 机构简介
  """
  机构简介
  """
  desc: String!
  
  # 联系人姓名
  """
  联系人姓名
  """
  contact: String
  
  # 联系电话
  """
  联系电话
  """
  tel: String
  
  # 联系邮箱
  """
  联系邮箱
  """
  email: String
  
  # 机构地址
  """
  机构地址
  """
  address: String
}


# 更新机构 输入参数
"""
更新机构 输入参数
"""
input UpdateInstitutionInput {
  id: BigInt!
  
  # 机构中文名
  """
  机构中文名
  """
  localName: String
  
  # 机构英文名
  """
  机构英文名
  """
  globalName: String
  
  # 机构简介
  """
  机构简介
  """
  desc: String
  
  # 联系人姓名
  """
  联系人姓名
  """
  contact: String
  
  # 联系电话
  """
  联系电话
  """
  tel: String
  
  # 联系邮箱
  """
  联系邮箱
  """
  email: String
  
  # 机构地址
  """
  机构地址
  """
  address: String
}


# 机构能够用来排序的字段
"""
机构能够用来排序的字段
"""
enum InstitutionSortableField {
  
  # 通用英文名称
  """
  通用英文名称
  """
  GLOBAL_NAME
}


# 机构排序控制参数
"""
机构排序控制参数
"""
input InstitutionSortParam {
  field: InstitutionSortableField!
  direction: SortDirection!
}


# 机构集合查询参数
"""
机构集合查询参数
"""
input InstitutionConnectionInput {
  pageParam: PageParam!
  sortParam: InstitutionSortParam
}


# 期刊
"""
期刊
"""
type Journal implements TypedObject {
  id: BigInt!
  isA: String!
  
  # 期刊中文名，如无，传入空字符串
  """
  期刊中文名，如无，传入空字符串
  """
  localName: String!
  
  # 期刊英文名，如无，传入空字符串
  """
  期刊英文名，如无，传入空字符串
  """
  globalName: String!
  
  # ISSN
  """
  ISSN
  """
  issn: String
  
  # 收录情况
  """
  收录情况
  """
  indexType: ArticleIndex
  
  # 期刊主页
  """
  期刊主页
  """
  homePage: URL
  
  # 投稿地址
  """
  投稿地址
  """
  contributionPage: URL
  
  # 期刊状态
  """
  期刊状态
  """
  status: MetaDataStatus!
  
  # 统计
  """
  统计
  """
  statistics: JournalStatistics!
  
  # 期刊动态，用于在期刊详情页中展示该元数据最近的变化
  """
  期刊动态，用于在期刊详情页中展示该元数据最近的变化
  """
  dynamics(pageParam: PageParam!): DynamicFeed!
  
  # 社区内容维护的主要贡献者，至多返回 10 位用户
  """
  社区内容维护的主要贡献者，至多返回 10 位用户
  """
  majorContributors: [Author!]!
  
  # 当前用户是否关注期刊
  """
  当前用户是否关注期刊
  """
  isSubscribed: Boolean!
}

type JournalStatistics {
  
  # 关注人数
  """
  关注人数
  """
  nSubscribers: NonNegativeInt!
}


# 新建期刊 输入参数
"""
新建期刊 输入参数
"""
input NewJournalInput {
  
  # 期刊中文名，如无，传入空字符串
  """
  期刊中文名，如无，传入空字符串
  """
  localName: String!
  
  # 期刊英文名，如无，传入空字符串
  """
  期刊英文名，如无，传入空字符串
  """
  globalName: String!
  
  # 影响因子
  """
  影响因子
  """
  influence: NonNegativeFloat
  
  # ISSN
  """
  ISSN
  """
  issn: String
  
  # 收录情况
  """
  收录情况
  """
  indexType: ArticleIndex
  
  # 期刊主页
  """
  期刊主页
  """
  homePage: URL
  
  # 投稿地址
  """
  投稿地址
  """
  contributionPage: URL
}


# 更新期刊 输入参数
"""
更新期刊 输入参数
"""
input UpdateJournalInput {
  id: BigInt!
  
  # 期刊中文名
  """
  期刊中文名
  """
  localName: String
  
  # 期刊英文名
  """
  期刊英文名
  """
  globalName: String
  
  # 影响因子
  """
  影响因子
  """
  influence: NonNegativeFloat
  
  # ISSN
  """
  ISSN
  """
  issn: String
  
  # 收录情况
  """
  收录情况
  """
  indexType: ArticleIndex
  
  # 期刊主页
  """
  期刊主页
  """
  homePage: URL
  
  # 投稿地址
  """
  投稿地址
  """
  contributionPage: URL
}


# 期刊过滤参数
"""
期刊过滤参数
"""
input JournalFilterParam {
  indexType: ArticleIndex
}


# 能够用来排序的字段
"""
能够用来排序的字段
"""
enum JournalSortableField {
  
  # 影响因子
  """
  影响因子
  """
  INFLUENCE
  
  # 期刊英文名
  """
  期刊英文名
  """
  GLOBAL_NAME
}


# 期刊排序控制参数
"""
期刊排序控制参数
"""
input JournalSortParam {
  field: JournalSortableField!
  direction: SortDirection!
}


# 期刊集合查询参数
"""
期刊集合查询参数
"""
input JournalConnectionInput {
  pageParam: PageParam
  filterParam: JournalFilterParam
  sortParam: JournalSortParam
}

type MindMap implements TypedObject {
  id: BigInt!
  isA: String!
  
  # mind map 所描述的目标对象的类型
  """
  mind map 所描述的目标对象的类型
  """
  target: MindMapTarget!
  
  # mind map 序列化后的字符串表示
  """
  mind map 序列化后的字符串表示
  """
  content: String!
  
  # 关联文章
  """
  关联文章
  """
  articles: [Article!]
}

enum MindMapTarget {
  
  # 作者
  """
  作者
  """
  AUTHOR
  
  # 研究课题
  """
  研究课题
  """
  RESEARCH
}

input NewMindMapDraftInput {
  
  # mind map 所描述的目标对象的ID
  """
  mind map 所描述的目标对象的ID
  """
  Id: BigInt!
  
  # mind map 所描述的目标对象的类型
  """
  mind map 所描述的目标对象的类型
  """
  target: MindMapTarget!
  
  # mind map 新对象的全量序列化内容
  """
  mind map 新对象的全量序列化内容
  """
  content: String!
}

input UpdateMindMapInput {
  
  # mind map 的ID
  """
  mind map 的ID
  """
  id: BigInt!
  
  # mind map 新对象的全量序列化内容
  """
  mind map 新对象的全量序列化内容
  """
  content: String!
}


# 笔记类型 Note-笔记 Questin-问答  (DEPRECATED)
"""
笔记类型 Note-笔记 Questin-问答  (DEPRECATED)
"""
enum NoteType {
  
  # 笔记
  """
  笔记
  """
  NOTE
  
  # 问答
  """
  问答
  """
  ISSUE
}


# 笔记(问答)  (DEPRECATED)
"""
笔记(问答)  (DEPRECATED)
"""
type Note {
  id: BigInt!
  
  # 笔记(问答)标题
  """
  笔记(问答)标题
  """
  title: String
  
  # 预览内容
  """
  预览内容
  """
  preview: String
  
  # 笔记(问答)内容
  """
  笔记(问答)内容
  """
  content: String
  
  # 作者ID
  """
  作者ID
  """
  author_id: BigInt!
  
  # 文章ID
  """
  文章ID
  """
  article_id: BigInt!
  
  # 笔记类型=笔记或问答
  """
  笔记类型=笔记或问答
  """
  note_type: NoteType!
  
  # 作者
  """
  作者
  """
  author: Author
  
  # 创建时间
  """
  创建时间
  """
  created_at: DateTime
  
  # 更新时间
  """
  更新时间
  """
  updated_at: DateTime
  
  # 评论
  """
  评论
  """
  comments: [Comment!]!
}


# 添加笔记默认参数 (DEPRECATED)
"""
添加笔记默认参数 (DEPRECATED)
"""
input createNoteInput {
  
  # 文章ID
  """
  文章ID
  """
  article_id: BigInt!
  
  # 标题
  """
  标题
  """
  title: String
  
  # 内容
  """
  内容
  """
  content: String!
  
  # 是否发表
  """
  是否发表
  """
  is_publish: Boolean!
  
  # 笔记类型
  """
  笔记类型
  """
  note_type: NoteType!
}


# 笔记(问题)更新参数 (DEPRECATED)
"""
笔记(问题)更新参数 (DEPRECATED)
"""
input updateNoteInput {
  
  # 标题
  """
  标题
  """
  title: String
  
  # 内容
  """
  内容
  """
  content: String
}

enum PaymentType {
  
  # 支付宝
  """
  支付宝
  """
  ALIPAY
  
  # 微信支付
  """
  微信支付
  """
  WECHATPAY
}


# 支付信息
"""
支付信息
"""
type PaymentInfo {
  
  # 支付服务商返回的支付页面 URL
  """
  支付服务商返回的支付页面 URL
  """
  paymentUrl: URL!
}


# 订单
"""
订单
"""
type Order {
  
  # 订单号
  """
  订单号
  """
  id: BigInt!
  
  # 商品原价
  """
  商品原价
  """
  price: Currency!
  
  # 商品优惠折扣
  """
  商品优惠折扣
  """
  discount: Currency!
  
  # 实际成交价格
  """
  实际成交价格
  """
  receiptAmount: Currency!
  
  # 实际成交时间
  """
  实际成交时间
  """
  dealTime: DateTime!
  
  # 购买的商品
  """
  购买的商品
  """
  commodity: TypedObject!
}

type OrderEdge {
  node: Order!
  
  # base64 编码的字符串
  """
  base64 编码的字符串
  """
  cursor: String!
}


# 订单分页
"""
订单分页
"""
type OrderFeed {
  edges: [OrderEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}


# 问题状态
"""
问题状态
"""
enum QuestionStatus {
  
  # 问题创建后未发布
  """
  问题创建后未发布
  """
  CREATED
  
  # 问题已发布
  """
  问题已发布
  """
  POSTED
  
  # 提问者支付酬金后回答者开始回答
  """
  提问者支付酬金后回答者开始回答
  """
  ANSWERSTARTED
  
  # 问答过程终止
  """
  问答过程终止
  """
  TERMINATED
  
  # 提问者认可并接受答案
  """
  提问者认可并接受答案
  """
  ANSWERACCEPTED
  
  # 问题已删除
  """
  问题已删除
  """
  DELETED
}


# 问题
"""
问题
"""
type Question implements TypedObject {
  id: BigInt!
  isA: String!
  
  # 问题标题
  """
  问题标题
  """
  title: String!
  
  # 问题详情
  """
  问题详情
  """
  detail: String!
  
  # 提问者，如果匿名发布该字段为 null
  """
  提问者，如果匿名发布该字段为 null
  """
  author: Author
  
  # 关键词
  """
  关键词
  """
  keywords: [String!]!
  
  # 问题定价
  """
  问题定价
  """
  price: Currency!
  
  # 是否匿名发布
  """
  是否匿名发布
  """
  anonymous: Boolean!
  
  # 仅受邀请用户可见
  """
  仅受邀请用户可见
  """
  inviteeOnly: Boolean!
  
  # 创建日期
  """
  创建日期
  """
  createdAt: DateTime!
  
  # 问题状态
  """
  问题状态
  """
  status: QuestionStatus!
  
  # 统计
  """
  统计
  """
  statistics: QuestionStatistics!
  
  # 当前用户是否关注问题
  """
  当前用户是否关注问题
  """
  isSubscribed: Boolean!
}

type QuestionStatistics {
  
  # 关注人数
  """
  关注人数
  """
  nSubscribers: NonNegativeInt!
}

enum AnswerStatus {
  
  # 草稿状态，可以反复编辑，仅自己可见
  """
  草稿状态，可以反复编辑，仅自己可见
  """
  DRAFT
  
  # 提交状态，可以反复修改，自己和提问者均可见
  """
  提交状态，可以反复修改，自己和提问者均可见
  """
  SUBMITTED
  
  # 回答被认可，不能继续修改，自己和提问者均可见，如有未尽回答，需要采用追问方式
  """
  回答被认可，不能继续修改，自己和提问者均可见，如有未尽回答，需要采用追问方式
  """
  ACCEPTED
}


# 回答
"""
回答
"""
type Answer {
  
  # ID
  """
  ID
  """
  id: BigInt!
  
  # 回答者
  """
  回答者
  """
  author: Author!
  
  # 预览，用来向未购买的用户展示部分内容
  """
  预览，用来向未购买的用户展示部分内容
  """
  preview: String
  
  # 回答详情
  """
  回答详情
  """
  detail: String!
  
  # 创建日期
  """
  创建日期
  """
  createdAt: DateTime!
  
  # 回答状态
  """
  回答状态
  """
  status: AnswerStatus!
}


# 追加的问答内容
"""
追加的问答内容
"""
type FollowUpQuestionAnswer {
  detail: String!
  createdAt: DateTime!
}


# 已经完成的完整问答记录
"""
已经完成的完整问答记录
"""
type QuestionAnswer {
  
  # ID
  """
  ID
  """
  id: BigInt!
  
  # 问题
  """
  问题
  """
  question: Question!
  
  # 回答
  """
  回答
  """
  answer: Answer!
  
  # 追问与追答
  """
  追问与追答
  """
  followups: [FollowUpQuestionAnswer!]
  
  # 答案旁听定价
  """
  答案旁听定价
  """
  price: Currency!
  
  # 统计
  """
  统计
  """
  statistics: QuestionAnswerStatistics!
}

type QuestionAnswerStatistics {
  
  # 关注人数
  """
  关注人数
  """
  nSubscribers: NonNegativeInt!
  
  # 购买人数
  """
  购买人数
  """
  nBuyers: NonNegativeInt!
  
  # 浏览详情但未购买人数，该数据只有创作者可见
  """
  浏览详情但未购买人数，该数据只有创作者可见
  """
  nBrowsers: NonNegativeInt!
}


# 新建问题 输入参数
"""
新建问题 输入参数
"""
input NewQuestionInput {
  
  # 问题标题
  """
  问题标题
  """
  title: String!
  
  # 问题详情
  """
  问题详情
  """
  detail: String!
  
  # 关键词
  """
  关键词
  """
  keywords: [String!]!
  
  # 问题定价
  """
  问题定价
  """
  price: Currency!
  
  # 是否匿名发布
  """
  是否匿名发布
  """
  anonymous: Boolean! = false
  
  # 仅受邀请用户可见
  """
  仅受邀请用户可见
  """
  inviteeOnly: Boolean! = false
  
  # 是否创建后立即发布
  """
  是否创建后立即发布
  """
  post: Boolean!
}


# 更新问题 输入参数
"""
更新问题 输入参数
"""
input UpdateQuestionInput {
  
  # 要更新的问题的ID
  """
  要更新的问题的ID
  """
  id: BigInt!
  
  # 问题标题
  """
  问题标题
  """
  title: String!
  
  # 问题详情
  """
  问题详情
  """
  detail: String!
  
  # 关键词
  """
  关键词
  """
  keywords: [String!]
  
  # 问题定价
  """
  问题定价
  """
  price: Currency!
}


# 问答确认 输入参数
"""
问答确认 输入参数
"""
input ConfirmInput {
  
  # 问题ID
  """
  问题ID
  """
  questionId: BigInt!
  
  # 提问者 Author Id
  """
  提问者 Author Id
  """
  questionerId: BigInt!
  
  # 回答者 Author Id
  """
  回答者 Author Id
  """
  answererId: BigInt!
}


# 选择回答者与支付 输入参数
"""
选择回答者与支付 输入参数
"""
input SelectAndPayInput {
  
  # 问题ID
  """
  问题ID
  """
  questionId: BigInt!
  
  # 回答者 Author Id
  """
  回答者 Author Id
  """
  answererId: BigInt!
}


# 新建回答 输入参数
"""
新建回答 输入参数
"""
input NewAnswerInput {
  
  # 问题ID
  """
  问题ID
  """
  questionId: BigInt!
  
  # 回答详情
  """
  回答详情
  """
  detail: String!
  
  # 是否创建回答时直接提交
  """
  是否创建回答时直接提交
  """
  submit: Boolean!
}


# 更新回答 输入参数
"""
更新回答 输入参数
"""
input UpdateAnswerInput {
  
  # 回答ID
  """
  回答ID
  """
  id: BigInt!
  
  # 回答详情
  """
  回答详情
  """
  detail: String!
}


# 发布完整问答 输入参数
"""
发布完整问答 输入参数
"""
input ReleaseQuestionAnswerInput {
  
  # 完整问答ID
  """
  完整问答ID
  """
  id: BigInt!
  
  # 旁听价格
  """
  旁听价格
  """
  price: Currency!
}


# 问答评级
"""
问答评级
"""
enum AnswerReviewRate {
  ANGRY
  NOTGOOD
  ASEXPECTED
  GOOD
  AMAZING
}


# 发布问答评价 输入参数
"""
发布问答评价 输入参数
"""
input PostQuestionAnswerReviewInput {
  
  # 等级评价
  """
  等级评价
  """
  rate: AnswerReviewRate!
  
  # 评价详情
  """
  评价详情
  """
  detail: String!
}


# 问答过滤参数
"""
问答过滤参数
"""
input QAFilterParam {
  
  # Author Id，请求问题时表示提问者，请求回答时表示回答者，可传入多项
  """
  Author Id，请求问题时表示提问者，请求回答时表示回答者，可传入多项
  """
  authorIds: [BigInt!]
  
  # 关键词，可传入多项
  """
  关键词，可传入多项
  """
  keywords: [String!]
}


# 能够用来排序的字段
"""
能够用来排序的字段
"""
enum SortableField {
  
  # 创建日期
  """
  创建日期
  """
  CREATED
  
  # 价格
  """
  价格
  """
  PRICE
}


# 排序控制参数
"""
排序控制参数
"""
input QASortParam {
  field: SortableField!
  direction: SortDirection!
}


# 问题或回答的集合查询参数
"""
问题或回答的集合查询参数
"""
input QACollectionInput {
  
  # 分页请求参数
  """
  分页请求参数
  """
  pageParam: PageParam!
  
  # 可选的过滤器参数
  """
  可选的过滤器参数
  """
  filterParam: QAFilterParam
  
  # 可选的排序参数
  """
  可选的排序参数
  """
  sortParam: QASortParam
}


# 问题及其游标，用于 QuestionFeed
"""
问题及其游标，用于 QuestionFeed
"""
type QuestionEdge {
  node: Question!
  
  # base64 编码的字符串
  """
  base64 编码的字符串
  """
  cursor: String!
}


# 问题列表，以流的方式组织
"""
问题列表，以流的方式组织
"""
type QuestionFeed {
  edges: [QuestionEdge!]!
  pageInfo: PageInfo!
}


# 完整问答列表，以流的方式组织
"""
完整问答列表，以流的方式组织
"""
type QuestionAnswerFeed {
  edges: [QuestionAnswerEdge!]!
  pageInfo: PageInfo!
}


# 发起举报参数
"""
发起举报参数
"""
input NewReportInput {
  
  # 举报对象ID
  """
  举报对象ID
  """
  objectId: BigInt!
  
  # 举报对象类型
  """
  举报对象类型
  """
  objectType: ObjectType!
  
  # 举报/投诉类型
  """
  举报/投诉类型
  """
  issueType: String!
  
  # 内容描述
  """
  内容描述
  """
  description: String
}

enum RequestStatus {
  
  # 审批中
  """
  审批中
  """
  IN_PROGESS
  
  # 审批通过
  """
  审批通过
  """
  APPROVED
  
  # 审批驳回
  """
  审批驳回
  """
  REJECT
}

enum ActionType {
  
  # 新增
  """
  新增
  """
  DATA_CREATE
  
  # 修改
  """
  修改
  """
  DATA_UPDATE
  
  # 删除
  """
  删除
  """
  DATA_DELETE
  
  # 合并
  """
  合并
  """
  DATA_MERGE
}

enum RequestRole {
  
  # 创建者
  """
  创建者
  """
  CREATOR
  
  # 审批者
  """
  审批者
  """
  REVIEWER
}

type ContentRequest {
  id: BigInt!
  
  # 元数据类型
  """
  元数据类型
  """
  targetType: ObjectType!
  
  # 元数据title
  """
  元数据title
  """
  title: String!
  
  # 原始对象
  """
  原始对象
  """
  left: TypedObject
  
  # 修改后对象
  """
  修改后对象
  """
  targetLog: TypedObject!
  
  # 合并的右id
  """
  合并的右id
  """
  right: TypedObject
  
  # 业务类型
  """
  业务类型
  """
  action: ActionType
  
  # 提交日期
  """
  提交日期
  """
  createdAt: DateTime
  
  # 审批状态
  """
  审批状态
  """
  status: RequestStatus!
}


# 存储审批关联项的分页信息
"""
存储审批关联项的分页信息
"""
type ContentRequestEdge {
  node: ContentRequest!
  cursor: String!
}


# 审批关联项
"""
审批关联项
"""
type ContentRequestFeed {
  edges: [ContentRequestEdge]
  pageInfo: PageInfo!
  totalCount: Int!
}


# 审批过滤参数
"""
审批过滤参数
"""
input ContentRequestFilterParam {
  
  # 元数据类型
  """
  元数据类型
  """
  targetType: ObjectType!
  
  # 业务类型
  """
  业务类型
  """
  action: ActionType
  
  # 审批状态
  """
  审批状态
  """
  status: RequestStatus
}


# 审批集合查询参数
"""
审批集合查询参数
"""
input ContentRequestFeedInput {
  pageParam: PageParam!
  filterParam: ContentRequestFilterParam
}


# 课题
"""
课题
"""
type Research implements TypedObject {
  id: BigInt!
  isA: String!
  
  # 课题标题
  """
  课题标题
  """
  title: String!
  
  # 课题简介
  """
  课题简介
  """
  desc: String
  
  # 脑图
  """
  脑图
  """
  mindMap: MindMap
  
  # 关联教程
  """
  关联教程
  """
  courses(pageParam: PageParam!): CourseConnection
  
  # 关联问答
  """
  关联问答
  """
  questionAnswers(pageParam: PageParam!): QuestionAnswerConnection
  
  # 关联文章
  """
  关联文章
  """
  articles(pageParam: PageParam!): ArticleConnection
  
  # 关联会议
  """
  关联会议
  """
  conferences(pageParam: PageParam!): ConferenceConnection
  
  # 关联期刊
  """
  关联期刊
  """
  journals(pageParam: PageParam!): JournalConnection
  
  # 行为统计
  """
  行为统计
  """
  statistics: ResearchStatistics
  
  # 课题状态
  """
  课题状态
  """
  status: MetaDataStatus!
  
  # 课题动态，用于在课题详情页中展示该元数据最近的变化
  """
  课题动态，用于在课题详情页中展示该元数据最近的变化
  """
  dynamics(pageParam: PageParam!): DynamicFeed!
  
  # 社区内容维护的主要贡献者，至多返回 10 位用户
  """
  社区内容维护的主要贡献者，至多返回 10 位用户
  """
  majorContributors: [Author!]!
  
  # 当前用户是否关注课题
  """
  当前用户是否关注课题
  """
  isSubscribed: Boolean!
}

type ResearchStatistics {
  
  # 关注人数
  """
  关注人数
  """
  nSubscribers: NonNegativeInt!
}


# 新建课题 输入参数
"""
新建课题 输入参数
"""
input NewResearchInput {
  
  # 课题标题
  """
  课题标题
  """
  title: String!
  
  # 课题简介
  """
  课题简介
  """
  desc: String
}


# 更新课题 输入参数
"""
更新课题 输入参数
"""
input UpdateResearchInput {
  id: BigInt!
  
  # 课题标题
  """
  课题标题
  """
  title: String
  
  # 课题简介
  """
  课题简介
  """
  desc: String
}


# 热搜关键词
"""
热搜关键词
"""
type HotSearch {
  keyword: String!
}


# 搜索关键词补全
"""
搜索关键词补全
"""
type KeywordCompletion {
  
  # 补全文本
  """
  补全文本
  """
  text: String
  
  # 类型
  """
  类型
  """
  type: ObjectType
}


# 文章动态 (DEPRECATED)
"""
文章动态 (DEPRECATED)
"""
type ArticleDynamic {
  id: BigInt!
  
  # 动态发起者, 为null, 则为系统后台操作
  """
  动态发起者, 为null, 则为系统后台操作
  """
  applyer: Author
  
  # 文章
  """
  文章
  """
  article: Article
  
  # 操作类型 1. 发表 2. 更新 3. 删除 4. 笔记 5. 问题 6. 合并
  """
  操作类型 1. 发表 2. 更新 3. 删除 4. 笔记 5. 问题 6. 合并
  """
  dy_type: NonNegativeInt!
  
  # 创建时间
  """
  创建时间
  """
  created_at: DateTime
  
  # 更新时间
  """
  更新时间
  """
  updated_at: DateTime
  
  # 动态数据
  """
  动态数据
  """
  dy_data: String
}


# 查询订阅条件，条件为与的关系 (DEPRECATED)
"""
查询订阅条件，条件为与的关系 (DEPRECATED)
"""
type SubscribeConditions {
  
  # 作者条件
  """
  作者条件
  """
  authors: [Author!]!
  
  # 会议条件
  """
  会议条件
  """
  conferences: [Conference!]!
}


# 时间线
"""
时间线
"""
type TimeLine implements TypedObject {
  id: BigInt!
  isA: String!
  
  # timeline 所描述的目标对象的类型
  """
  timeline 所描述的目标对象的类型
  """
  target: TimeLineTarget!
  
  # timeline 序列化后的字符串表示
  """
  timeline 序列化后的字符串表示
  """
  content: String!
  
  # 关联文章
  """
  关联文章
  """
  articles: [Article!]
}

enum TimeLineTarget {
  
  # 作者
  """
  作者
  """
  AUTHOR
  
  # 研究课题
  """
  研究课题
  """
  RESEARCH
}

input NewTimeLineDraftInput {
  
  # timeline 所描述的目标对象的ID
  """
  timeline 所描述的目标对象的ID
  """
  Id: BigInt!
  
  # timeline 所描述的目标对象的类型
  """
  timeline 所描述的目标对象的类型
  """
  target: TimeLineTarget!
  
  # timeline 对象的全量序列化内容
  """
  timeline 对象的全量序列化内容
  """
  content: String!
}

input UpdateTimeLineInput {
  
  # timeline 的 ID
  """
  timeline 的 ID
  """
  id: BigInt!
  
  # timeline 新对象的全量序列化内容
  """
  timeline 新对象的全量序列化内容
  """
  content: String!
}

type UploadResult {
  url: URL
  success: Boolean!
}

enum UploadPurpose {
  
  # 头像
  """
  头像
  """
  AVATAR
  
  # 除头像外的所有图片
  """
  除头像外的所有图片
  """
  BIGIMAGE
}


# 用户基础数据，专用于返回用户列表的场景，如消息的联系人列表
"""
用户基础数据，专用于返回用户列表的场景，如消息的联系人列表
"""
type UserBasic {
  
  # 认证服务统一管理的 UUID
  """
  认证服务统一管理的 UUID
  """
  id: ID!
  
  # 用户名
  """
  用户名
  """
  userName: String!
  
  # 头像
  """
  头像
  """
  avatar: URL
}


# app 用户
"""
app 用户
"""
type User {
  
  # 认证服务统一管理的 UUID
  """
  认证服务统一管理的 UUID
  """
  id: ID!
  
  # 用户名
  """
  用户名
  """
  userName: String!
  
  # 性别
  """
  性别
  """
  gender: Gender
  
  # 头像
  """
  头像
  """
  avatar: URL
  
  # 邮箱
  """
  邮箱
  """
  email: String
  
  # 手机号码
  """
  手机号码
  """
  phone: PhoneNumber
  
  # 默认关联的作者身份
  """
  默认关联的作者身份
  """
  author: Author
  
  # 经过认证的学者身份 (V2)
  """
  经过认证的学者身份 (V2)
  """
  scholar: Author
  
  # 用户统计信息
  """
  用户统计信息
  """
  statistics: UserStatistics!
  
  # 购买的教程
  """
  购买的教程
  """
  purchasedCourses(pageParam: PageParam): CourseConnection
  
  # 购买的完整问答
  """
  购买的完整问答
  """
  purchasedQuestionAnswers(pageParam: PageParam): QuestionAnswerConnection
  
  # 创建的论文收藏夹列表
  """
  创建的论文收藏夹列表
  """
  collections(pageParam: PageParam): CollectionConnection
  
  # 我的用户反馈列表
  """
  我的用户反馈列表
  """
  feedbacks(pageParam: PageParam): UserFeedbackList!
  
  # 我的关注和订阅
  """
  我的关注和订阅
  """
  subscriptionAndFollowship: UserSubscriptionAndFollowship!
  
  # 我的订单
  """
  我的订单
  """
  orders(pageParam: PageParam): OrderFeed!
  
  # 查询审批集合(我发起的)
  """
  查询审批集合(我发起的)
  """
  contentRequestsAsCreator(input: ContentRequestFeedInput!): ContentRequestFeed
  
  # 查询审批集合(发给我的)
  """
  查询审批集合(发给我的)
  """
  contentRequestsAsReviewer(input: ContentRequestFeedInput!): ContentRequestFeed
}

type UserSubscriptionAndFollowship {
  
  # 订阅的课题
  """
  订阅的课题
  """
  researches(pageParam: PageParam): ResearchConnection!
  
  # 订阅的文章
  """
  订阅的文章
  """
  articles(pageParam: PageParam): ArticleConnection!
  
  # 订阅的期刊
  """
  订阅的期刊
  """
  journals(pageParam: PageParam): JournalConnection!
  
  # 订阅的会议
  """
  订阅的会议
  """
  conferences(pageParam: PageParam): ConferenceConnection!
  
  # 关注的作者
  """
  关注的作者
  """
  authors(pageParam: PageParam): AuthorConnection!
}

enum Gender {
  MALE
  FEMALE
}


# 用户列表的分页信息
"""
用户列表的分页信息
"""
type UserEdge {
  node: User!
  cursor: String!
}


# 用户列表
"""
用户列表
"""
type UserList {
  edges: [UserEdge]
  pageInfo: PageInfo!
  totalCount: Int!
}


# 用户统计信息
"""
用户统计信息
"""
type UserStatistics {
  
  # 关注我的用户数量
  """
  关注我的用户数量
  """
  nFollowers: NonNegativeInt!
  
  # 我关注的用户数量
  """
  我关注的用户数量
  """
  nFollows: NonNegativeInt!
  
  # 阅读过的文章数量
  """
  阅读过的文章数量
  """
  nReads: NonNegativeInt!
  
  # 购买的教程数量
  """
  购买的教程数量
  """
  nPurchasedCourses: NonNegativeInt!
  
  # 购买的问答数量
  """
  购买的问答数量
  """
  nPurchasedQuestionAnswers: NonNegativeInt!
  
  # 可提现金额
  """
  可提现金额
  """
  balance: Currency!
}


# 用户资料更新参数
"""
用户资料更新参数
"""
input UpdateMyProfileInput {
  userName: String
  avatar: URL
  gender: Gender
  email: String
  phone: PhoneNumber
}


# 用户反馈类型
"""
用户反馈类型
"""
enum UserFeedbackType {
  
  # 新功能建议
  """
  新功能建议
  """
  ADVICE
  
  # 已有功能存在的问题
  """
  已有功能存在的问题
  """
  ISSUE
}


# 用户反馈处理状态
"""
用户反馈处理状态
"""
enum UserFeedbackStatus {
  
  # 正在处理
  """
  正在处理
  """
  IN_PROGRESS
  
  # 处理结束
  """
  处理结束
  """
  DONE
  
  # 用户撤销
  """
  用户撤销
  """
  CANCELLED
}


# 针对平台功能的反馈
"""
针对平台功能的反馈
"""
type UserFeedback {
  
  # id
  """
  id
  """
  id: BigInt!
  
  # 标题
  """
  标题
  """
  title: String!
  
  # 内容详情
  """
  内容详情
  """
  content: String
  
  # 重现步骤
  """
  重现步骤
  """
  steps: String
  
  # 处理状态
  """
  处理状态
  """
  status: UserFeedbackStatus!
  
  # 处理结果信息
  """
  处理结果信息
  """
  resultMsg: String
  
  # 处理时间
  """
  处理时间
  """
  handledAt: DateTime!
  
  # 创建时间
  """
  创建时间
  """
  createdAt: DateTime!
}


# 用户反馈列表的分页信息
"""
用户反馈列表的分页信息
"""
type UserFeedbackEdge {
  node: UserFeedback!
  cursor: String!
}


# 用户反馈列表
"""
用户反馈列表
"""
type UserFeedbackList {
  edges: [UserFeedbackEdge]
  pageInfo: PageInfo!
  totalCount: Int!
}

input SubmitUserFeedbackInput {
  
  # 标题
  """
  标题
  """
  title: String!
  
  # 内容
  """
  内容
  """
  content: String!
  
  # 重现步骤
  """
  重现步骤
  """
  steps: String
  
  # 类型
  """
  类型
  """
  type: UserFeedbackType!
}

schema {
  query: Query
  mutation: Mutation
}
